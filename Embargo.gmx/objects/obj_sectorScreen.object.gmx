<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-100</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hx = x
hy = y

dragged = false

lockX = x
lockY = y
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if keyboard_check(vk_escape){
    instance_destroy()
}

if mouse_check_button_pressed(mb_left){
    if point_in_rectangle(mouse_x,mouse_y,x-100,y-140,x+100,y-120){
        dragged = true
        lockX = mouse_x
        lockY = mouse_y
    }
}

if mouse_check_button(mb_left){
    if dragged = true{
        hx += (mouse_x-lockX)//view_xview
        hy += (mouse_y-lockY)//view_yview
        lockX = mouse_x
        lockY = mouse_y
    }
}

if mouse_check_button_released(mb_left){
    dragged = false
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x = hx+view_xview
y = hy+view_yview



draw_set_colour(c_black)
draw_set_alpha(.5)
draw_rectangle(x-100,y-150,x+100,y+150,false)
draw_set_colour(c_white)
draw_set_alpha(1)
draw_rectangle(x-100,y-150,x+100,y+150,true)

draw_set_font(fnt_huge)
draw_set_halign(fa_middle)

switch(global.selectedNode.type){
    case NODE_TYPES.PLANET: draw_text(x,y-135,global.selectedNode.name) break
    case NODE_TYPES.ASTEROID_BELT: draw_text(x,y-135,'Asteroid Field') break
    case NODE_TYPES.OCEAN: draw_text(x,y-135,'Ocean') break
    case NODE_TYPES.NEBULA: draw_text(x,y-135,'Nebula') break
    case NODE_TYPES.BLACK_HOLE: draw_text(x,y-135,'Black Hole') break
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
